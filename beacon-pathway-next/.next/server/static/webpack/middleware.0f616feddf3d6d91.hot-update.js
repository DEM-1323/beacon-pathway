"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./src/lib/utils/supabase/middleware.ts":
/*!**********************************************!*\
  !*** ./src/lib/utils/supabase/middleware.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateSession: () => (/* binding */ updateSession)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function updateSession(request) {\n    let supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n        request: {\n            headers: request.headers\n        }\n    });\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://rqdfthnxrusonnldjjal.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJxZGZ0aG54cnVzb25ubGRqamFsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU4NjYwMjcsImV4cCI6MjA2MTQ0MjAyN30.DE0z-Zn5ufUdX_BgBCk7AnbUR1l6Gl1TEkYn15YaCGY\", {\n        cookies: {\n            getAll () {\n                return request.cookies.getAll();\n            },\n            setAll (cookiesToSet) {\n                cookiesToSet.forEach(({ name, value, options })=>request.cookies.set(name, value));\n                supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n                    request\n                });\n                cookiesToSet.forEach(({ name, value, options })=>supabaseResponse.cookies.set(name, value, options));\n            }\n        }\n    });\n    // Do not run code between createServerClient and\n    // supabase.auth.getUser(). A simple mistake could make it very hard to debug\n    // issues with users being randomly logged out.\n    // IMPORTANT: DO NOT REMOVE auth.getUser()\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user && !request.nextUrl.pathname.startsWith(\"/login\") && !request.nextUrl.pathname.startsWith(\"/auth\")) {\n        // no user, potentially respond by redirecting the user to the login page\n        const url = request.nextUrl.clone();\n        url.pathname = \"/login\";\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n    }\n    // IMPORTANT: You *must* return the supabaseResponse object as it is.\n    // If you're creating a new response object with NextResponse.next() make sure to:\n    // 1. Pass the request in it, like so:\n    //    const myNewResponse = NextResponse.next({ request })\n    // 2. Copy over the cookies, like so:\n    //    myNewResponse.cookies.setAll(supabaseResponse.cookies.getAll())\n    // 3. Change the myNewResponse object to fit your needs, but avoid changing\n    //    the cookies!\n    // 4. Finally:\n    //    return myNewResponse\n    // If this is not done, you may be causing the browser and server to go out\n    // of sync and terminate the user's session prematurely!\n    return supabaseResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL2xpYi91dGlscy9zdXBhYmFzZS9taWRkbGV3YXJlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNVO0FBRXRELGVBQWVFLGNBQWNDLE9BQW9CO0lBQ3RELElBQUlDLG1CQUFtQkgscURBQVlBLENBQUNJLElBQUksQ0FBQztRQUN2Q0YsU0FBUztZQUNQRyxTQUFTSCxRQUFRRyxPQUFPO1FBQzFCO0lBQ0Y7SUFFQSxNQUFNQyxXQUFXUCxpRUFBa0JBLENBQ2pDUSwwQ0FBb0MsRUFDcENBLGtOQUF5QyxFQUN6QztRQUNFSSxTQUFTO1lBQ1BDO2dCQUNFLE9BQU9WLFFBQVFTLE9BQU8sQ0FBQ0MsTUFBTTtZQUMvQjtZQUNBQyxRQUFPQyxZQUFZO2dCQUNqQkEsYUFBYUMsT0FBTyxDQUFDLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLE9BQU8sRUFBRSxHQUM1Q2hCLFFBQVFTLE9BQU8sQ0FBQ1EsR0FBRyxDQUFDSCxNQUFNQztnQkFFNUJkLG1CQUFtQkgscURBQVlBLENBQUNJLElBQUksQ0FBQztvQkFDbkNGO2dCQUNGO2dCQUNBWSxhQUFhQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFLEdBQzVDZixpQkFBaUJRLE9BQU8sQ0FBQ1EsR0FBRyxDQUFDSCxNQUFNQyxPQUFPQztZQUU5QztRQUNGO0lBQ0Y7SUFHRixpREFBaUQ7SUFDakQsNkVBQTZFO0lBQzdFLCtDQUErQztJQUUvQywwQ0FBMEM7SUFFMUMsTUFBTSxFQUNKRSxNQUFNLEVBQUVDLElBQUksRUFBRSxFQUNmLEdBQUcsTUFBTWYsU0FBU2dCLElBQUksQ0FBQ0MsT0FBTztJQUUvQixJQUNFLENBQUNGLFFBQ0QsQ0FBQ25CLFFBQVFzQixPQUFPLENBQUNDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLGFBQ3JDLENBQUN4QixRQUFRc0IsT0FBTyxDQUFDQyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxVQUNyQztRQUNBLHlFQUF5RTtRQUN6RSxNQUFNQyxNQUFNekIsUUFBUXNCLE9BQU8sQ0FBQ0ksS0FBSztRQUNqQ0QsSUFBSUYsUUFBUSxHQUFHO1FBQ2YsT0FBT3pCLHFEQUFZQSxDQUFDNkIsUUFBUSxDQUFDRjtJQUMvQjtJQUVBLHFFQUFxRTtJQUNyRSxrRkFBa0Y7SUFDbEYsc0NBQXNDO0lBQ3RDLDBEQUEwRDtJQUMxRCxxQ0FBcUM7SUFDckMscUVBQXFFO0lBQ3JFLDJFQUEyRTtJQUMzRSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLDBCQUEwQjtJQUMxQiwyRUFBMkU7SUFDM0Usd0RBQXdEO0lBRXhELE9BQU94QjtBQUNUIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERhdmlkLk1hcnRpbmV6MDAzXFxPbmVEcml2ZSAtIFVuaXZlcnNpdHkgb2YgTWFzc2FjaHVzZXR0cyBCb3N0b25cXERvY3VtZW50c1xcUGVyc29uYWwgUHJvamVjdHNcXEJlYWNvblBhdGh3YXlcXGJlYWNvbi1wYXRod2F5XFxiZWFjb24tcGF0aHdheS1uZXh0XFxzcmNcXGxpYlxcdXRpbHNcXHN1cGFiYXNlXFxtaWRkbGV3YXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gXCJAc3VwYWJhc2Uvc3NyXCI7XG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UsIHR5cGUgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVNlc3Npb24ocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgbGV0IHN1cGFiYXNlUmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7XG4gICAgcmVxdWVzdDoge1xuICAgICAgaGVhZGVyczogcmVxdWVzdC5oZWFkZXJzLFxuICAgIH0sXG4gIH0pO1xuXG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlU2VydmVyQ2xpZW50KFxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhLFxuICAgIHtcbiAgICAgIGNvb2tpZXM6IHtcbiAgICAgICAgZ2V0QWxsKCkge1xuICAgICAgICAgIHJldHVybiByZXF1ZXN0LmNvb2tpZXMuZ2V0QWxsKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHNldEFsbChjb29raWVzVG9TZXQpIHtcbiAgICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSwgb3B0aW9ucyB9KSA9PlxuICAgICAgICAgICAgcmVxdWVzdC5jb29raWVzLnNldChuYW1lLCB2YWx1ZSlcbiAgICAgICAgICApO1xuICAgICAgICAgIHN1cGFiYXNlUmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7XG4gICAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvb2tpZXNUb1NldC5mb3JFYWNoKCh7IG5hbWUsIHZhbHVlLCBvcHRpb25zIH0pID0+XG4gICAgICAgICAgICBzdXBhYmFzZVJlc3BvbnNlLmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlLCBvcHRpb25zKVxuICAgICAgICAgICk7XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH1cbiAgKTtcblxuICAvLyBEbyBub3QgcnVuIGNvZGUgYmV0d2VlbiBjcmVhdGVTZXJ2ZXJDbGllbnQgYW5kXG4gIC8vIHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpLiBBIHNpbXBsZSBtaXN0YWtlIGNvdWxkIG1ha2UgaXQgdmVyeSBoYXJkIHRvIGRlYnVnXG4gIC8vIGlzc3VlcyB3aXRoIHVzZXJzIGJlaW5nIHJhbmRvbWx5IGxvZ2dlZCBvdXQuXG5cbiAgLy8gSU1QT1JUQU5UOiBETyBOT1QgUkVNT1ZFIGF1dGguZ2V0VXNlcigpXG5cbiAgY29uc3Qge1xuICAgIGRhdGE6IHsgdXNlciB9LFxuICB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKCk7XG5cbiAgaWYgKFxuICAgICF1c2VyICYmXG4gICAgIXJlcXVlc3QubmV4dFVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL2xvZ2luXCIpICYmXG4gICAgIXJlcXVlc3QubmV4dFVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL2F1dGhcIilcbiAgKSB7XG4gICAgLy8gbm8gdXNlciwgcG90ZW50aWFsbHkgcmVzcG9uZCBieSByZWRpcmVjdGluZyB0aGUgdXNlciB0byB0aGUgbG9naW4gcGFnZVxuICAgIGNvbnN0IHVybCA9IHJlcXVlc3QubmV4dFVybC5jbG9uZSgpO1xuICAgIHVybC5wYXRobmFtZSA9IFwiL2xvZ2luXCI7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xuICB9XG5cbiAgLy8gSU1QT1JUQU5UOiBZb3UgKm11c3QqIHJldHVybiB0aGUgc3VwYWJhc2VSZXNwb25zZSBvYmplY3QgYXMgaXQgaXMuXG4gIC8vIElmIHlvdSdyZSBjcmVhdGluZyBhIG5ldyByZXNwb25zZSBvYmplY3Qgd2l0aCBOZXh0UmVzcG9uc2UubmV4dCgpIG1ha2Ugc3VyZSB0bzpcbiAgLy8gMS4gUGFzcyB0aGUgcmVxdWVzdCBpbiBpdCwgbGlrZSBzbzpcbiAgLy8gICAgY29uc3QgbXlOZXdSZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHsgcmVxdWVzdCB9KVxuICAvLyAyLiBDb3B5IG92ZXIgdGhlIGNvb2tpZXMsIGxpa2Ugc286XG4gIC8vICAgIG15TmV3UmVzcG9uc2UuY29va2llcy5zZXRBbGwoc3VwYWJhc2VSZXNwb25zZS5jb29raWVzLmdldEFsbCgpKVxuICAvLyAzLiBDaGFuZ2UgdGhlIG15TmV3UmVzcG9uc2Ugb2JqZWN0IHRvIGZpdCB5b3VyIG5lZWRzLCBidXQgYXZvaWQgY2hhbmdpbmdcbiAgLy8gICAgdGhlIGNvb2tpZXMhXG4gIC8vIDQuIEZpbmFsbHk6XG4gIC8vICAgIHJldHVybiBteU5ld1Jlc3BvbnNlXG4gIC8vIElmIHRoaXMgaXMgbm90IGRvbmUsIHlvdSBtYXkgYmUgY2F1c2luZyB0aGUgYnJvd3NlciBhbmQgc2VydmVyIHRvIGdvIG91dFxuICAvLyBvZiBzeW5jIGFuZCB0ZXJtaW5hdGUgdGhlIHVzZXIncyBzZXNzaW9uIHByZW1hdHVyZWx5IVxuXG4gIHJldHVybiBzdXBhYmFzZVJlc3BvbnNlO1xufVxuIl0sIm5hbWVzIjpbImNyZWF0ZVNlcnZlckNsaWVudCIsIk5leHRSZXNwb25zZSIsInVwZGF0ZVNlc3Npb24iLCJyZXF1ZXN0Iiwic3VwYWJhc2VSZXNwb25zZSIsIm5leHQiLCJoZWFkZXJzIiwic3VwYWJhc2UiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJjb29raWVzIiwiZ2V0QWxsIiwic2V0QWxsIiwiY29va2llc1RvU2V0IiwiZm9yRWFjaCIsIm5hbWUiLCJ2YWx1ZSIsIm9wdGlvbnMiLCJzZXQiLCJkYXRhIiwidXNlciIsImF1dGgiLCJnZXRVc2VyIiwibmV4dFVybCIsInBhdGhuYW1lIiwic3RhcnRzV2l0aCIsInVybCIsImNsb25lIiwicmVkaXJlY3QiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/lib/utils/supabase/middleware.ts\n");

/***/ })

});